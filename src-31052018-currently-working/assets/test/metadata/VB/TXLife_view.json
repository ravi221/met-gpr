{
  "formId" : "PPC_TXLife",
  "version" : "0.12",
  "title" : "TXLife ",
  "categories" : [ {
    "categoryId" : "planInfo",
    "label" : "Setup",
    "state" : {
      "isHidden" : false,
      "isDisabled" : false
    },
    "rules" : {
      "onInit" : [ ],
      "onError" : [ ],
      "onChange" : [ ]
    },
    "sections" : [ {
      "sectionId" : "planDetails",
      "label" : "Plan Details",
      "order" : 1,
      "state" : {
        "isHidden" : false,
        "isDisabled" : false
      },
      "rules" : {
        "onInit" : [ ],
        "onError" : [ ],
        "onChange" : [ ]
      },
      "questions" : [ {
        "questionId" : "planName",
        "label" : "Plan Name",
        "order" : 1,
        "model" : "PLN_NM",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "maxLength" : 60
        },
        "control" : {
          "type" : "text",
          "hint" : "This is where a unique plan name can be entered to  name,  define or identify each plan",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          }
        }
      }, {
        "questionId" : "personalDependentCode",
        "label" : "PD Code",
        "order" : 3,
        "model" : "PRVD.PER_DPND_CD",
        "rules" : {
          "onInit" : [  {
            "condition" : "getIn('MAPPED') === true",
            "action" : ["setState('plPlanID', 'isDisabled', true)", "setState('retireeFundingCode', 'isDisabled', true)", "setState('planFinancialArrangementCode', 'isDisabled', true)", "setState('personalDependentCode', 'isDisabled', true)", "setState('administrativeSystemCode', 'isDisabled', true)"]
          }],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "A", "B", "C", "D", "E", "N", "P" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "Identifies whether the plan covers employee only or covers employee and dependents. P = Employee B=Dependents",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Personal",
            "value" : "P"
          } ]
        }
      }, {
        "questionId" : "planFinancialArrangementCode",
        "label" : "Financial Arrangement",
        "order" : 4,
        "model" : "ADMN.CLM_PROC_SPRT.PLN_FIN_ARNG_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "AO", "FI", "MP" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "The identifier which determines who's money is used to pay a claim Fully Insured = MetLife",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Fully Insured",
            "value" : "FI"
          } ]
        }
      }, {
        "questionId" : "metlifeCompanyOwnershipCode",
        "label" : "Stock Company Policy",
        "order" : 5,
        "model" : "ADMN.MET_CO_OWN_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "MUTL", "STCK" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "Indicates whether a plan was issued after Metlife was converted from a mutual company to a stock company. A Stock Company policy should be used if the customer was effective 04/07/00 or later. The answer to this question, plus the answer to whether a plan is Participating or not determines whether a plan is Participating, Non-Participating, Retro Rated or Non-Retro Rated.",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "No",
            "value" : "MUTL"
          }, {
            "label" : "Yes",
            "value" : "STCK"
          } ]
        }
      }, {
        "questionId" : "participatingIndicator",
        "label" : "Participating/Retro Rated",
        "order" : 6,
        "model" : "ADMN.PRTCP_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "What is the Financial Arrangement\nParticipating\\Retro, we can return a dividend if there is a premium surplus (more premium than needed to cover claims, reserves and expenses) and/or ask for a retro payment of premium to cover loses up to a specified amount.   With non-participating we set the rate and either we win or lose based on the experience.",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        }
      }, {
        "questionId" : "retireeFundingCode",
        "label" : "Retiree Funding",
        "order" : 18,
        "model" : "PRVD.RTR_FUND_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "GLIFA", "LIFA", "NONE" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "An indicator to choose the type of funding agreement for the plan if it was sold with one.  The default is \"None\"\nOthers include:\nLife insurance Funding Agreement - LIFA (Life) \nGroup Life Insurance Funding Agreement GLIFA (Life) None",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "GLIFA",
            "value" : "GLIFA"
          }, {
            "label" : "LIFA",
            "value" : "LIFA"
          }, {
            "label" : "None",
            "value" : "NONE"
          } ]
        }
      }, {
        "questionId" : "administrativeSystemCode",
        "label" : "Coverage Admin System",
        "order" : 22,
        "model" : "ADMN.ADMN_SYS_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ {
            "condition" : "getIn('ADMN.ADMN_SYS_CD') === 'TXLF'",
            "action" : ["setState('territoryTextWorkSpecificIndicator', 'isDisabled', false)", "setState('premiumContributorCode', 'isDisabled', false)", "setState('plPlanId', 'isDisabled', false)"]
          },  {
            "condition" : "getIn('ADMN.ADMN_SYS_CD') !== 'TXLF'",
            "action" : ["setState('territoryTextWorkSpecificIndicator', 'isDisabled', true)", "setState('premiumContributorCode', 'isDisabled', true)", "setState('plPlanId', 'isDisabled', true)"]
          }, {
            "condition" : "getIn('ADMN.ADMN_SYS_CD') === 'MET'",
            "action" : ["setIn('PRVD.LIF.ACCL_DB_CHRN_ILL_RDR_IND', 'N')", "setIn('PRVD.PREM_WV_IND', 'N')", "setIn('PRVD.LIF.ACCD_DTH_BEN_RDR_IND', 'N')"]
          }, {
            "condition" : "getIn('ADMN.ADMN_SYS_CD') !== 'TXLF' && getIn('ADMN.ADMN_SYS_CD') !== 'MET'",
            "action" : ["setState('acceleratedDeathBenefitChronicIllnessRiderIndicator', 'isDisabled', true)", "setState('accidentalDeathBenefitsRiderIndicator', 'isDisabled', true)", "setState('premiumWaiverIndicator', 'isDisabled', true)"]
          }, {
            "condition" : "getIn('ADMN.ADMN_SYS_CD') === 'TXLF' || getIn('ADMN.ADMN_SYS_CD') === 'MET'",
            "action" : ["setState('acceleratedDeathBenefitChronicIllnessRiderIndicator', 'isDisabled', false)", "setState('accidentalDeathBenefitsRiderIndicator', 'isDisabled', false)", "setState('premiumWaiverIndicator', 'isDisabled', false)"]
          } ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "CIFSDI", "DELL", "MET", "TXLF", "WILTON" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "Determines what the administrative / recordkeeping system for the particular coverage is used",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "MetLife System",
            "value" : "MET"
          }, {
            "label" : "Texas Life",
            "value" : "TXLF"
          }, {
            "label" : "Wilton",
            "value" : "WILTON"
          } ]
        },
        "dependentQuestions" : [ "premiumContributorCode" ]
      }, {
        "questionId" : "premiumContributorCode",
        "label" : "EE/ER Paid",
        "order" : 39,
        "model" : "PRVD.PREM_CNTRB_CD",
        "rules" : {
          "onInit" : [ {
            "condition" : "getCategory(getActiveCategoryId()).statusCode === 'Active'",
            "action" : ["setState('accidentalDeathBenefitsRiderIndicator', 'isDisabled', true)", "setState('territoryTextWorkSpecificIndicator', 'isDisabled', true)", "setState('premiumWaiverIndicator', 'isDisabled', true)", "setState('acceleratedDeathBenefitChronicIllnessRiderIndicator', 'isDisabled', true)", "setState('premiumContributorCode', 'isDisabled', true)"]
          }],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "GCUST", "MBR", "GCUSTMBR" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "This is an indicator that determines who pays for coverage.  Premium is the dollar that has to be paid for the benefits sold, either by the employer (ER) or the employee (EE)",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Group Customer",
            "value" : "GCUST"
          }, {
            "label" : "Member/Employee",
            "value" : "MBR"
          }, {
            "label" : "Group Customer and Member",
            "value" : "GCUSTMBR"
          } ]
        },
        "dependentQuestions" : [ "administrativeSystemCode" ]
      }, {
        "questionId" : "territoryTextWorkSpecificIndicator",
        "label" : "Is this plan for New York Employees",
        "order" : 40,
        "model" : "",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan is specifically for New York Employees",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        }
      }, {
        "questionId" : "planTypeCode",
        "label" : "PL Plan ID",
        "order" : 41,
        "model" : "PRVD.PLN_TYP_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "121", "221", "421", "PREFERRED", "STANDARD", "NA", "CUSTOM", "BSCWCOUT", "BSCWOCOUT", "FMLA", "FMLATAM", "TAM", "SUPPWCOUT", "SUPPWOCOUT" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "An indicator that to select the appropriate plan type that was sold\n3 different plans – Solutions 121, Solutions 221 and Solutions 421.  \nOne to One – 121 \n(meaning the full initial death benefit is paid out at death)\n\nTwo to One – 221 \n(meaning that half the initial death benefit is paid out at death)\n\nFour to One – 421 \n(meaning that a quarter of the initial death benefit is paid out at death)",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "One to One",
            "value" : "121"
          }, {
            "label" : "Two to One",
            "value" : "221"
          }, {
            "label" : "Four to One",
            "value" : "421"
          } ]
        }
      }, {
        "questionId" : "premiumWaiverIndicator",
        "label" : "Waiver of Premium",
        "order" : 42,
        "model" : "PRVD.PREM_WV_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan included the Waiver of Premium benefit for employees",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        }
      }, {
        "questionId" : "acceleratedDeathBenefitChronicIllnessRiderIndicator",
        "label" : "Accelerated Death Benefit - Chronic illness",
        "order" : 43,
        "model" : "PRVD.LIF.ACCL_DB_CHRN_ILL_RDR_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A yes/no indicator to show if the sold plan included  Accelerated Death Benefits for Chronic Illness rider",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        }
      }, {
        "questionId" : "accidentalDeathBenefitsRiderIndicator",
        "label" : "Accidental Death Benefit",
        "order" : 44,
        "model" : "PRVD.LIF.ACCD_DTH_BEN_RDR_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan included the Accidental Death Benefit Rider",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        }
      }, {
        "questionId" : "claimPaymentMethodCode",
        "label" : "Claim Payment",
        "order" : 62,
        "model" : "ADMN.CLM_PROC_SPRT.CLM_PY_MTHD_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "2", "26", "5", "6", "7", "9", "CHK", "CKACCT", "DRAFT", "EMPRPD", "FWT", "NON", "NOT6", "REIMB", "SAP", "SAVACCT", "TCA" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "This field indicates the method of claim payment. There are three values:\n1) Regular Pay - claims are paid by Metropolitan out of their bank account\n2) Local Pay/Draft - a third party administrator ( TPA ) pays claims using Metlife check stock\n3) Reimbursement - a third party administrator ( TPA ) pays claims using their own check stock. The claims are then reported to Metlife who issue a check to the TPA to reimburse him for the claims that he paid.",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Regular Pay",
            "value" : "2"
          }, {
            "label" : "Local Pay / Draft",
            "value" : "DRAFT"
          }, {
            "label" : "Reimbursement",
            "value" : "REIMB"
          } ]
        }
      }, {
        "questionId" : "totalControlAccountCode",
        "label" : "Total Control Account",
        "order" : 63,
        "model" : "ADMN.CLM_PROC_SPRT.TCA_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "A", "O" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "Total Control Account is an account that is established for the beneficiary upon claims settlement where the settlement amount is deposited. The beneficiary is issues check book to access the account.\n* Automatic is the default and MetLife standard. This means that beneficiary does not have an option to receive a lump sum check for the benefit, but rather MetLife establishes a checking account in their name and sends them the checks in which they can access the money.\n* Optional is when the beneficiary chooses to receive a lump sum check or have a checking account established for them.",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Automatic",
            "value" : "A"
          }, {
            "label" : "Elective",
            "value" : "O"
          } ]
        }
      } ]
    } ]
  } ]
}
