{
  "formId" : "PPC_GAH",
  "version" : "0.41",
  "title" : "Group Accident",
  "categories" : [ {
    "categoryId" : "planInfo",
    "label" : "Setup",
    "state" : {
      "isHidden" : false,
      "isDisabled" : false
    },
    "rules" : {
      "onInit" : [ ],
      "onError" : [ ],
      "onChange" : [ ]
    },
    "sections" : [ {
      "sectionId" : "planDetails",
      "label" : "Plan Details",
      "order" : 1,
      "state" : {
        "isHidden" : false,
        "isDisabled" : false
      },
      "rules" : {
        "onInit" : [
 ],
        "onError" : [ ],
        "onChange" : [ ]
      },
      "questions" : [ {
        "questionId" : "planName",
        "label" : "Plan Name",
        "order" : 1,
        "model" : "PLN_NM",
        "rules" : {
          "onInit" : [          {
            "condition" : "getIn('MAPPED') === true",
            "action": ["setState('underwritingIssueTypeCode', 'isDisabled', true)", "setState('personalDependentCode', 'isDisabled', true)", "setState('administrativeSystemCode', 'isDisabled', true)", "setState('premiumContributorCode', 'isDisabled', true)", "setState('planLevelCode', 'isDisabled', true)", "setState('accidentMedicalTreatmentandServicesBenefitsIndicator', 'isDisabled', true)", "setState('accidentInjuryBenefitsIndicator', 'isDisabled', true)", "setState('accidentalDeathDismembermentBenefitsIndicator', 'isDisabled', true)", "setState('accidentalDeathBenefitsIndicator', 'isDisabled', true)", "setState('additionalRidersBenefitsIndicator', 'isDisabled', true)", "setState('sicknessHospitalBenefitsIndicator', 'isDisabled', true)", "setState('accidentHospitalBenefitsIndicator', 'isDisabled', true)"]
          } ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "maxLength" : 60
        },
        "control" : {
          "type" : "text",
          "hint" : "This is where a unique plan name can be entered to  name,  define or identify each plan",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          }
        }
      }, {
        "questionId" : "personalDependentCode",
        "label" : "PD Code",
        "order" : 3,
        "model" : "PRVD.PER_DPND_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "A", "B", "C", "D", "E", "N", "P" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "Identifies whether the plan covers employee only or covers employee and dependents. P = Employee B=Dependents",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Both - Personal/Member and Dependent",
            "value" : "B"
          },  {
            "label" : "Personal/Member/Employee",
            "value" : "P"
          } ]
        }
      }, {
        "questionId" : "planFinancialArrangementCode",
        "label" : "Financial Arrangement",
        "order" : 4,
        "model" : "ADMN.CLM_PROC_SPRT.PLN_FIN_ARNG_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "AO", "FI", "MP" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "The identifier which determines who's money is used to pay a claim Fully Insured = MetLife",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [  {
            "label" : "Fully Insured",
            "value" : "FI"
          } ]
        }
      }, {
        "questionId" : "metlifeCompanyOwnershipCode",
        "label" : "Stock Company Policy",
        "order" : 5,
        "model" : "ADMN.MET_CO_OWN_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "MUTL", "STCK" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "Indicates whether a plan was issued after Metlife was converted from a mutual company to a stock company. A Stock Company policy should be used if the customer was effective 04/07/00 or later. The answer to this question, plus the answer to whether a plan is Participating or not determines whether a plan is Participating, Non-Participating, Retro Rated or Non-Retro Rated.",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Mutual",
            "value" : "MUTL"
          }, {
            "label" : "Stock",
            "value" : "STCK"
          } ]
        }
      }, {
        "questionId" : "participatingIndicator",
        "label" : "Participating/Retro Rated",
        "order" : 6,
        "model" : "ADMN.PRTCP_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "What is the Financial Arrangement\nParticipating\\Retro, we can return a dividend if there is a premium surplus (more premium than needed to cover claims, reserves and expenses) and/or ask for a retro payment of premium to cover loses up to a specified amount.   With non-participating we set the rate and either we win or lose based on the experience.",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        }
      },

  {
        "questionId" : "administrativeSystemCode",
        "label" : "Coverage Admin System",
        "order" : 22,
        "model" : "ADMN.ADMN_SYS_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "CIFSDI", "DELL", "MET", "TXLF", "WILTON" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "Determines what the administrative / recordkeeping system for the particular coverage is used",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [  {
            "label" : "DELL",
            "value" : "DELL"
          }]
        },
        "dependentQuestions" : [ "premiumContributorCode" ]
      }, {
        "questionId" : "premiumContributorCode",
        "label" : "EE/ER Paid",
        "order" : 39,
        "model" : "PRVD.PREM_CNTRB_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "GCUST", "MBR", "GCUSTMBR" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "This is an indicator that determines who pays for coverage.  Premium is the dollar that has to be paid for the benefits sold, either by the employer (ER) or the employee (EE)",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Group Customer",
            "value" : "GCUST"
          }, {
            "label" : "Member/Employee",
            "value" : "MBR"
          }, {
            "label" : "Group Customer and Member",
            "value" : "GCUSTMBR"
          } ]
        },
        "dependentQuestions" : [ "administrativeSystemCode" ]
      }, {
        "questionId" : "planTypeCode",
        "label" : "Standard/Custom Plan",
        "order" : 53,
        "model" : "PRVD.PLN_TYP_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [{
            "condition" : "getIn('PRVD.PLN_TYP_CD') === 'CUSTOM' && !getIn('MAPPED')",
            "action" : ["setState('accidentMedicalTreatmentandServicesBenefitsIndicator', 'isDisabled', false)", "setState('accidentInjuryBenefitsIndicator', 'isDisabled', false)", "setState('accidentalDeathDismembermentBenefitsIndicator', 'isDisabled', false)", "setState('accidentalDeathBenefitsIndicator', 'isDisabled', false)", "setState('additionalRidersBenefitsIndicator', 'isDisabled', false)", "setState('sicknessHospitalBenefitsIndicator', 'isDisabled', false)", "setState('accidentHospitalBenefitsIndicator', 'isDisabled', false)"]
          }, {
            "condition" : "getIn('PRVD.PLN_TYP_CD') !== 'CUSTOM'",
            "action" : ["setState('accidentMedicalTreatmentandServicesBenefitsIndicator', 'isDisabled', true)", "setState('accidentInjuryBenefitsIndicator', 'isDisabled', true)", "setState('accidentalDeathDismembermentBenefitsIndicator', 'isDisabled', true)", "setState('accidentalDeathBenefitsIndicator', 'isDisabled', true)", "setState('additionalRidersBenefitsIndicator', 'isDisabled', true)", "setState('sicknessHospitalBenefitsIndicator', 'isDisabled', true)", "setState('accidentHospitalBenefitsIndicator', 'isDisabled', true)"]
          }, {
            "condition" : "getIn('PRVD.PLN_TYP_CD') === 'STANDARD'",
            "action" : "setState('planLevelCode', 'isDisabled', false)"
          }, {
            "condition" : "getIn('PRVD.PLN_TYP_CD') !== 'STANDARD'",
            "action" : "setState('planLevelCode', 'isDisabled', true)"
          }  ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "121", "221", "421", "PREFERRED", "STANDARD", "NA", "CUSTOM", "BSCWCOUT", "BSCWOCOUT", "FMLA", "FMLATAM", "TAM", "SUPPWCOUT", "SUPPWOCOUT" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "An indicator that determines if the plan provisions are standard or if custom options were sold",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "One to One - full initial death benefit is paid out at death",
            "value" : "121"
          }, {
            "label" : "Two to One - half the initial death benefit is paid out at death",
            "value" : "221"
          }, {
            "label" : "Four to One -  a quarter of the initial death benefit is paid out at death",
            "value" : "421"
          }, {
            "label" : "Preferred",
            "value" : "PREFERRED"
          }, {
            "label" : "Standard",
            "value" : "STANDARD"
          }, {
            "label" : "Not Applicable",
            "value" : "NA"
          }, {
            "label" : "Custom",
            "value" : "CUSTOM"
          }, {
            "label" : "Basic with Carveout",
            "value" : "BSCWCOUT"
          }, {
            "label" : "Basic without Carveout",
            "value" : "BSCWOCOUT"
          }, {
            "label" : "Family Medical Leave Act/Absence",
            "value" : "FMLA"
          }, {
            "label" : "FMLA on Total Absence Management",
            "value" : "FMLATAM"
          }, {
            "label" : "Total Absence Management",
            "value" : "TAM"
          }, {
            "label" : "Supplemental with Carveout",
            "value" : "SUPPWCOUT"
          }, {
            "label" : "Supplemental without Carveout",
            "value" : "SUPPWOCOUT"
          } ]
        },
        "dependentQuestions" : [ "sicknessHospitalBenefitsIndicator", "planLevelCode", "additionalRidersBenefitsIndicator", "accidentalDeathBenefitsIndicator", "accidentMedicalTreatmentandServicesBenefitsIndicator", "accidentInjuryBenefitsIndicator", "accidentalDeathDismembermentBenefitsIndicator", "accidentHospitalBenefitsIndicator" ]
      }, {
        "questionId" : "planLevelCode",
        "label" : "GAH Plan ID",
        "order" : 54,
        "model" : "PRVD.PLN_LVL_CD",
        "rules" : {
          "onInit" : [ {
            "condition" : "isNil(getIn('PRVD.PLN_LVL_CD'))",
            "action" : ["setState('accidentalDeathBenefitsIndicator', 'isDisabled', true)", "setIn('PRVD.ACCD_HLTH.ACCD_INJR_BEN_IND', 'N')", "setState('accidentMedicalTreatmentandServicesBenefitsIndicator', 'isDisabled', true)", "setIn('PRVD.ACCD_HLTH.ACCD_MED_TREAT_SRV_BEN_IND', 'N')",  "setState('accidentInjuryBenefitsIndicator', 'isDisabled', true)", "setIn('PRVD.ACCD_HLTH.ACCD_INJR_BEN_IND', 'N')",  "setState('accidentalDeathDismembermentBenefitsIndicator', 'isDisabled', true)", "setIn('PRVD.ACCD_HLTH.ACCD_DTH_DMBR_BEN_IND', 'N')",  "setState('additionalRidersBenefitsIndicator', 'isDisabled', true)", "setIn('PRVD.ACCD_HLTH.ADDL_RDR_BEN_IND', 'N')",  "setState('accidentHospitalBenefitsIndicator', 'isDisabled', true)", "setIn('PRVD.ACCD_HLTH.ACCD_HOSP_BEN_IND', 'N')"]
          }],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "HIGH", "LOW", "MID" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "The Group Accident & Health Plan ID allows the user to select which plan was sold in order to set up the proper rate structure",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "High Option",
            "value" : "HIGH"
          }, {
            "label" : "Low Option",
            "value" : "LOW"
          }, {
            "label" : "Mid Option",
            "value" : "MID"
          } ]
        },
        "dependentQuestions" : [ "planTypeCode" ]
      }, {
        "questionId" : "accidentalDeathBenefitsIndicator",
        "label" : "Accidental Death Benefit",
        "order" : 55,
        "model" : "PRVD.ACCD_HLTH.ACCD_DTH_BEN_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan included the Accidental Death Benefit",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        },
        "dependentQuestions" : [ "planTypeCode" ]
      }, {
        "questionId" : "accidentalDeathDismembermentBenefitsIndicator",
        "label" : "Accidental Death & Dismemberment Benefit",
        "order" : 56,
        "model" : "PRVD.ACCD_HLTH.ACCD_DTH_DMBR_BEN_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan included the Accidental Death & Dismemberment Benefit",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        },
        "dependentQuestions" : [ "planTypeCode" ]
      }, {
        "questionId" : "accidentInjuryBenefitsIndicator",
        "label" : "Accident Injuries Benefit",
        "order" : 57,
        "model" : "PRVD.ACCD_HLTH.ACCD_INJR_BEN_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan included the Accident Injuries Benefit",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        },
        "dependentQuestions" : [ "planTypeCode" ]
      }, {
        "questionId" : "accidentMedicalTreatmentandServicesBenefitsIndicator",
        "label" : "Accident (Medical Treatment & Services) Benefit",
        "order" : 58,
        "model" : "PRVD.ACCD_HLTH.ACCD_MED_TREAT_SRV_BEN_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan included the Accident (Medical Treatment & Services) Benefit",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        },
        "dependentQuestions" : [ "planTypeCode" ]
      }, {
        "questionId" : "accidentHospitalBenefitsIndicator",
        "label" : "Hospital due to Accident Benefit",
        "order" : 59,
        "model" : "PRVD.ACCD_HLTH.ACCD_HOSP_BEN_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan included the Hospital due to Accident Benefit",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        },
        "dependentQuestions" : [ "planTypeCode" ]
      }, {
        "questionId" : "sicknessHospitalBenefitsIndicator",
        "label" : "Hospital due to Sickness Benefit",
        "order" : 60,
        "model" : "PRVD.ACCD_HLTH.SICK_HOSP_BEN_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan included the Hospital due to Sickness Benefit",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        },
        "dependentQuestions" : [ "planTypeCode" ]
      }, {
        "questionId" : "additionalRidersBenefitsIndicator",
        "label" : "Additional Riders",
        "order" : 61,
        "model" : "PRVD.ACCD_HLTH.ADDL_RDR_BEN_IND",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "Y", "N" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "A Yes/No indicator that identifies whether the sold plan included any additional riders",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Yes",
            "value" : "Y"
          }, {
            "label" : "No",
            "value" : "N"
          } ]
        },
        "dependentQuestions" : [ "planTypeCode" ]
      }, {
        "questionId" : "claimPaymentMethodCode",
        "label" : "Claim Payment",
        "order" : 62,
        "model" : "ADMN.CLM_PROC_SPRT.CLM_PY_MTHD_CD",
        "rules" : {
          "onInit" : [ ],
          "onError" : [ ],
          "onChange" : [ ]
        },
        "schema" : {
          "type" : "string",
          "enum" : [ "2", "26", "5", "6", "7", "9", "CHK", "CKACCT", "DRAFT", "EMPRPD", "FWT", "NON", "NOT6", "REIMB", "SAP", "SAVACCT", "TCA" ]
        },
        "control" : {
          "type" : "radio",
          "hint" : "This field indicates the method of claim payment. There are three values:\n1) Regular Pay - claims are paid by Metropolitan out of their bank account\n2) Local Pay/Draft - a third party administrator ( TPA ) pays claims using Metlife check stock\n3) Reimbursement - a third party administrator ( TPA ) pays claims using their own check stock. The claims are then reported to Metlife who issue a check to the TPA to reimburse him for the claims that he paid.",
          "state" : {
            "isHidden" : false,
            "isDisabled" : false,
            "isRequired" : false
          },
          "choices" : [ {
            "label" : "Regular or Direct Billing",
            "value" : "2"
          }, {
            "label" : "Pre-Authorized Check",
            "value" : "26"
          }, {
            "label" : "List Bill",
            "value" : "5"
          }, {
            "label" : "Payroll Deduction",
            "value" : "6"
          }, {
            "label" : "Electronic Funds Transfer",
            "value" : "7"
          }, {
            "label" : "Credit Card Billing",
            "value" : "9"
          }, {
            "label" : "Check",
            "value" : "CHK"
          }, {
            "label" : "Checking Account",
            "value" : "CKACCT"
          }, {
            "label" : "Draft",
            "value" : "DRAFT"
          }, {
            "label" : "Employer Paid",
            "value" : "EMPRPD"
          }, {
            "label" : "Federal Reserve Funds/Wire Transfer",
            "value" : "FWT"
          }, {
            "label" : "Non-Payment Data",
            "value" : "NON"
          }, {
            "label" : "Not payroll deduction - Unknown",
            "value" : "NOT6"
          }, {
            "label" : "Reimbursement",
            "value" : "REIMB"
          }, {
            "label" : "Self-Applied Premium Billing",
            "value" : "SAP"
          }, {
            "label" : "Savings Account",
            "value" : "SAVACCT"
          }, {
            "label" : "Total Control Account",
            "value" : "TCA"
          } ]
        }
      } ]
    } ]
  } ]
}
